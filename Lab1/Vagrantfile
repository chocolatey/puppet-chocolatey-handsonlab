# -*- mode: ruby -*-
# vi: set ft=ruby :

#Vagrant.require_plugin "vagrant-windows"

Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "win7x64pro"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "http://vagrant-windows.s3.amazonaws.com/win7pro-x64-vbox4216-nocm.box"
  #vmware fusion 5 box
  #config.vm.box_url = "http://vagrant-windows.s3.amazonaws.com/win7pro-x64-vmwarefusion5-nocm.box"



  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  config.vm.provider :virtualbox do |v|
    # Don't boot with headless mode
    v.gui = true
    # Use VBoxManage to customize the VM. For example to change memory:
    #v.customize ["modifyvm", :id, "--memory", "1024"]
  end

  # Max time to wait for the guest to shutdown
  config.windows.halt_timeout = 20

  # Admin user name and password
  config.winrm.username = "vagrant"
  config.winrm.password = "vagrant"

  # Configure base box parameters
  config.vm.guest = :windows

  # Port forward WinRM and RDP
  #config.vm.network :forwarded_port, guest: 3389, host: 3389
  config.vm.network :forwarded_port, guest: 5985, host: 5985

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network :private_network, ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network :public_network

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  # config.ssh.forward_agent = true

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  config.vm.synced_folder "resources/templates/_templates", "/code/_templates"
  config.vm.synced_folder "puppet/box_modules", "/ProgramData/PuppetLabs/puppet/etc/modules"

  # This shell provisioner installs chocolatey, ruby, and puppet. Also runs librarian-puppet.
  config.vm.provision :shell, :path => "shell/main.cmd"

  #config.vm.action("reload")

  # Enable provisioning with Puppet stand alone.  Puppet manifests
  # are contained in a directory path relative to this Vagrantfile.
  #config.vm.provision :puppet, :options => ["--debug --trace --verbose"] do |puppet|
  config.vm.provision :puppet do |puppet|
    puppet.manifests_path = "puppet/manifests"
    puppet.manifest_file  = "site.pp"
    puppet.module_path = "puppet/modules"
    puppet.facter = {
      "domain" => "local",
      "kernel" => "windows",
      "operatingsystem" => "windows",
      "osfamily" => "windows",
    }
  end
end
